{
  "enabled": true,
  "name": "代码质量分析器",
  "description": "监听源代码文件的变化，当检测到修改时，自动分析代码质量，识别代码异味、设计模式应用机会和最佳实践建议，生成改进建议以提升代码的可读性、可维护性和性能。",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.js",
      "**/*.ts",
      "**/*.vue",
      "**/*.jsx",
      "**/*.tsx",
      "**/*.py",
      "**/*.java",
      "**/*.go",
      "**/*.rs"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "分析刚刚修改的源代码文件，执行以下任务：\n\n1. **代码异味检测**：识别常见的代码异味，如重复代码、过长函数、过多参数、复杂的条件逻辑等\n2. **设计模式建议**：评估是否可以应用设计模式来改进代码结构和可维护性\n3. **最佳实践检查**：对照语言和框架的最佳实践，提出改进建议\n4. **性能优化**：识别潜在的性能瓶颈和优化机会\n5. **可读性改进**：建议如何提高代码的可读性和清晰度\n6. **安全性审查**：检查常见的安全漏洞和风险\n\n请提供：\n- 具体的问题描述和位置\n- 改进建议和示例代码\n- 优先级评估（高/中/低）\n- 预期收益说明\n\n注意：保持现有功能不变，只提供改进建议，不要直接修改代码。使用中文输出所有分析结果。"
  }
}